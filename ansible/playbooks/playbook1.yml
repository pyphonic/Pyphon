---
- hosts: pyphon-wsgi
  remote_user: ubuntu
  vars_files:
    - vars.yml
  vars:
    server_dns: "{{ WEB_HOST }}"
    SECRET_KEY: "{{ SECRET_KEY }}"
    DB_NAME: "{{ DB_NAME }}"
    DB_PASSWORD: "{{ DB_PASSWORD }}"
    DB_USERNAME: "{{ DB_USERNAME }}"
    EM_PASS: "{{ EM_PASS }}"
    DB_HOST: "{{ DB_HOST }}"
    DB_PORT: "{{ DB_PORT }}"
    WEB_HOST: "{{ WEB_HOST }}"
    ALLOWED_HOSTS: "{{ ALLOWED_HOSTS }}"
    TWILIO_NUMBER: "{{ TWILIO_NUMBER }}"
    AUTH_TOKEN: "{{ AUTH_TOKEN }}"
    ACCOUNT_SID: "{{ ACCOUNT_SID }}"
    TWILIO_ACCOUNT_SID: "{{ TWILIO_ACCOUNT_SID }}"
    TWILIO_AUTH_TOKEN: "{{ TWILIO_AUTH_TOKEN }}"
    TWIML_APPLICATION_SID: "{{ TWIML_APPLICATION_SID }}"
  environment:
    SECRET_KEY: "{{ SECRET_KEY }}"
    DB_NAME: "{{ DB_NAME }}"
    DB_PASSWORD: "{{ DB_PASSWORD }}"
    DB_USERNAME: "{{ DB_USERNAME }}"
    EM_PASS: "{{ EM_PASS }}"
    DB_HOST: "{{ DB_HOST }}"
    DB_PORT: "{{ DB_PORT }}"
    WEB_HOST: "{{ WEB_HOST }}"
    ALLOWED_HOSTS: "{{ ALLOWED_HOSTS }}"
    TWILIO_NUMBER: "{{ TWILIO_NUMBER }}"
    AUTH_TOKEN: "{{ AUTH_TOKEN }}"
    ACCOUNT_SID: "{{ ACCOUNT_SID }}"
    TWILIO_ACCOUNT_SID: "{{ TWILIO_ACCOUNT_SID }}"
    TWILIO_AUTH_TOKEN: "{{ TWILIO_AUTH_TOKEN }}"
    TWIML_APPLICATION_SID: "{{ TWIML_APPLICATION_SID }}"
  become: yes
  tasks:
    - name: Run "pwd" on my remote machine
      command: pwd
      become_method: sudo

    - name: Update the ubuntu machine with all the latest stuff
      apt: update_cache=yes
      become_method: sudo

    - name: Upgrade the ubuntu machine with all the latest stuff
      apt: upgrade=yes
      become_method: sudo

    - name: install All the things
      apt: name={{ item }} state=latest
      become_method: sudo
      with_items:
        - nginx
        - python3
        - python3-pip
        - python3.4-venv
        - git
        - gunicorn
        - libtiff5-dev
        - libjpeg8-dev
        - zlib1g-dev
        - libfreetype6-dev
        - liblcms2-dev
        - libwebp-dev
        - tcl8.6-dev
        - tk8.6-dev
        - python-tk
        - python-dev
        - libpq-dev

    - name: clone the repo
      git: clone=yes repo={{ git_repo }} dest={{ project_dir }} version=development

    - name: Check if venv exists
      stat: path={{ envname }}/bin
      register: venv_dir

    - name: Create a virtual environment in the pyphon repo
      command: python3 -m venv {{ envname }}
      when: venv_dir.stat.isdir is not defined

    - name: Install gunicorn to the virtualenv
      pip: virtualenv={{ envname }} name=gunicorn
      become_method: sudo

    - name: Install Pyphon requirements
      pip: virtualenv={{ envname }} requirements={{ project_dir }}/requirements.pip
      become_method: sudo

    - name: Django migrate
      django_manage: command=migrate
                     app_path={{ project_dir }}/pyphon
                     virtualenv={{ envname }}

    - name: Django collectstatic
      django_manage: command=collectstatic
                     app_path={{ project_dir }}/pyphon
                     virtualenv={{ envname }}

    # - name: Make my directory tree readable
    #   file:
    #     path: "{{project_dir}}/pyphon/MEDIA/"
    #     mode:  0777

    - name: Register the old default file
      stat: path=/etc/nginx/sites-available/default.orig
      register: default_stat
      become_method: sudo

    - name: Rename old default file
      command: mv /etc/nginx/sites-available/default /etc/nginx/sites-available/default.orig
      when: not default_stat.stat.exists
      become_method: sudo

    - name: Create a new default file for nginx
      template: src=../templates/nginx_config.jinja2 dest=/etc/nginx/sites-available/default
      become_method: sudo

    - name: Restart nginx service
      service: name=nginx state=restarted
      become_method: sudo

    # - name: Run the shell script
    #   script: ../templates/gunicornscript.sh

    - name: Copy upstart script into /etc/init
      template: src=../templates/upstart_config.jinja2 dest=/etc/init/pyphon.conf
      become_method: sudo

    - name: Restart the pyphon upstart job
      service: name=pyphon state=restarted
      become_method: sudo